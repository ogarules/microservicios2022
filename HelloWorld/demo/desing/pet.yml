swagger: "2.0"
info:
  title: "Pet store API"
  version: "1.0.1"
  contact:
    email: "oscar.garcia@mariachi.io"
    name: "OGA"
    url: "https://spring.io"
  description: "Api for managing the pet store"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/apache2.0.html"
  termsOfService: "http://swagger.io"
basePath: "/api"
tags:
  - name: "Pet api"
    description: "Pet CRUD"
    externalDocs:
      url: "http://spring.io"
      description: "Find out more"
schemes:
  - http
  - https
paths:
  /pets:
    get:
      tags:
        - "Pet api"
      description: "Get all available pets"
      operationId: "getAllPets"
      produces:
        - "application/json"
      responses:
        200:
          description: Success
          schema:
            type: array
            items: 
              $ref: "#/definitions/Pet"
        404:
          description: "No pets found"
    post:
      tags:
        - "Pet api"
      parameters:
        - name: pet
          in: body
          schema:
            $ref: "#/definitions/Pet"
          required: true
      operationId: addPet
      summary: "Api for adding pet"
      produces:
      - "application/json"
      responses:
        200:
          description: Success
          schema: 
            $ref: "#/definitions/Pet"      
  /pets/{id}:
    get:
      tags:
        - "Pet api"
      description: "Get one pet bi id"
      operationId: "getPet"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: path
          type: integer
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Pet"
        404:
          description: Pet not found
    put:
      tags:
        - "Pet api"
      description: "Update pet information"
      operationId: "updatePet"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: path
          type: integer
          required: true
        - name: pet
          in: body
          schema:
            $ref: "#/definitions/Pet"
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Pet"
        404:
          description: Pet not found
    delete:
      tags:
        - "Pet api"
      description: "Delete pet"
      operationId: "deletePet"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: path
          type: integer
          required: true
      responses:
        200:
          description: Success
        404:
          description: Pet not found
definitions:
  Pet:
    required:
      - "name"
      - "id"
    properties: 
      id:
        type: integer
        format: "int64"
        example: "1234"
        description: "The pet internal identifier"
      name:
        type: string
        example: "Fido"
        description: "The pet name"
      tag:
        type: string
        example: "ABC-123"
        description: "Electronical tag"
      species:
        type: string
        example: "dog"
        description: "Pet species"
    